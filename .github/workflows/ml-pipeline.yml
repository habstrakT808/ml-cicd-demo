name: ML CI/CD Pipeline

# Kapan workflow ini akan jalan
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Jobs yang akan dijalankan
jobs:
  test:
    name: 🧪 Testing
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout kode
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      # Step 2: Setup Python
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Step 3: Install dependencies
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: 🧪 Run Tests
        run: |
          pytest tests/ -v --tb=short

      # Step 5: Upload test results
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: pytest.xml

  train-model:
    name: 🤖 Train Model
    runs-on: ubuntu-latest
    needs: test # Hanya jalan jika test berhasil

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step: Train model
      - name: 🚀 Train Model
        run: |
          cd src
          python train.py

      # Step: Upload model artifacts
      - name: 📤 Upload Model
        uses: actions/upload-artifact@v3
        with:
          name: trained-model
          path: models/
          retention-days: 30

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [test, train-model]
    if: github.ref == 'refs/heads/main' # Hanya deploy dari branch main

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📥 Download Model
        uses: actions/download-artifact@v3
        with:
          name: trained-model
          path: models/

      - name: 🚀 Deploy Model
        run: |
          echo "🎉 Model berhasil di-deploy!"
          echo "📁 Model files:"
          ls -la models/
          echo "✅ Deployment completed successfully!"

      # Simulasi notifikasi (opsional)
      - name: 📢 Notify Success
        run: |
          echo "🔔 Deployment notification:"
          echo "✅ ML Model successfully deployed to production!"
          echo "📊 Timestamp: $(date)"
